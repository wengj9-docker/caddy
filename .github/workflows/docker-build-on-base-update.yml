name: Docker build/publish when base image is updated

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

env:
  # github.repository as <account>/<repo>
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}


jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-22.04
          - platform: linux/arm64
            runner: ubuntu-22.04-arm

    runs-on: ${{ matrix.runner || 'ubuntu-22.04' }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
    
      - name: Checkout repository
        uses: actions/checkout@v4
    
      # From: https://www.flypenguin.de/2021/07/30/auto-rebuild-docker-images-if-base-image-changes-using-github-actions/
      # only execute subsequent steps if an update is actually NEEDED.
      # unfortunately we need to add an if-condition to all steps now
      # because a clean exit can't be triggered within a job it seems
      # (a cancellation is NOT the same and triggers a failure email)
      # see also https://github.com/actions/runner/issues/662    
      - name: Docker Image Update Checker
        id: baseupdatecheck
        uses: lucacome/docker-image-update-checker@v2.0.0
        with:
          base-image: docker://caddy:alpine
          derived-image: ${{ env.IMAGE_NAME }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Docker Image Update Checker
        id: baseupdatecheck
        uses: lucacome/docker-image-update-checker@v2.0.0
        with:
          base-image: docker://caddy:alpine
          derived-image: docker://${{ env.IMAGE_NAME }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}            
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
        if: ${{ github.event_name != 'pull_request' && steps.baseupdatecheck.outputs.needs-updating == 'true' }}